import{q as e,G as t,t as r,u as n,k as s,M as a,v as i,E as o,e as u,x as d,y as l,z as c,F as h,R as p,H as f,I as m,s as v,S as g,h as _,w as x,J as b,K as T,b as y,B as k,i as C,L as M,N as S,j as w,O as G,Q as P,a as R,V as B,W as U,X as A,Y as I,C as O,Z as F,_ as E,$ as D,D as z,a0 as W,P as H,c as L,T as V,a1 as j,a2 as N,a3 as q,a4 as $}from"./index-Cr8LSycj.js";import{S as K,B as Y,c as J}from"./colorToUniform-B66bJmDR.js";const X=class n extends e{constructor(e){super(e={...n.defaultOptions,...e}),this.enabled=!0,this._state=K.for2d(),this.blendMode=e.blendMode,this.padding=e.padding,this.antialias="boolean"==typeof e.antialias?e.antialias?"on":"off":e.antialias,this.resolution=e.resolution,this.blendRequired=e.blendRequired,this.clipToViewport=e.clipToViewport,this.addResource("uTexture",0,1)}apply(e,t,r,n){e.applyFilter(this,t,r,n)}get blendMode(){return this._state.blendMode}set blendMode(e){this._state.blendMode=e}static from(e){const{gpu:s,gl:a,...i}=e;let o,u;return s&&(o=t.from(s)),a&&(u=r.from(a)),new n({gpuProgram:o,glProgram:u,...i})}};X.defaultOptions={blendMode:"normal",resolution:1,padding:0,antialias:"off",blendRequired:!1,clipToViewport:!0};let Q=X;var Z="struct GlobalFilterUniforms {\n  uInputSize:vec4<f32>,\n  uInputPixel:vec4<f32>,\n  uInputClamp:vec4<f32>,\n  uOutputFrame:vec4<f32>,\n  uGlobalFrame:vec4<f32>,\n  uOutputTexture:vec4<f32>,\n};\n\nstruct MaskUniforms {\n  uFilterMatrix:mat3x3<f32>,\n  uMaskClamp:vec4<f32>,\n  uAlpha:f32,\n  uInverse:f32,\n};\n\n@group(0) @binding(0) var<uniform> gfu: GlobalFilterUniforms;\n@group(0) @binding(1) var uTexture: texture_2d<f32>;\n@group(0) @binding(2) var uSampler : sampler;\n\n@group(1) @binding(0) var<uniform> filterUniforms : MaskUniforms;\n@group(1) @binding(1) var uMaskTexture: texture_2d<f32>;\n\nstruct VSOutput {\n    @builtin(position) position: vec4<f32>,\n    @location(0) uv : vec2<f32>,\n    @location(1) filterUv : vec2<f32>,\n};\n\nfn filterVertexPosition(aPosition:vec2<f32>) -> vec4<f32>\n{\n    var position = aPosition * gfu.uOutputFrame.zw + gfu.uOutputFrame.xy;\n\n    position.x = position.x * (2.0 / gfu.uOutputTexture.x) - 1.0;\n    position.y = position.y * (2.0*gfu.uOutputTexture.z / gfu.uOutputTexture.y) - gfu.uOutputTexture.z;\n\n    return vec4(position, 0.0, 1.0);\n}\n\nfn filterTextureCoord( aPosition:vec2<f32> ) -> vec2<f32>\n{\n    return aPosition * (gfu.uOutputFrame.zw * gfu.uInputSize.zw);\n}\n\nfn globalTextureCoord( aPosition:vec2<f32> ) -> vec2<f32>\n{\n  return  (aPosition.xy / gfu.uGlobalFrame.zw) + (gfu.uGlobalFrame.xy / gfu.uGlobalFrame.zw);\n}\n\nfn getFilterCoord(aPosition:vec2<f32> ) -> vec2<f32>\n{\n  return ( filterUniforms.uFilterMatrix * vec3( filterTextureCoord(aPosition), 1.0)  ).xy;\n}\n\nfn getSize() -> vec2<f32>\n{\n  return gfu.uGlobalFrame.zw;\n}\n\n@vertex\nfn mainVertex(\n  @location(0) aPosition : vec2<f32>,\n) -> VSOutput {\n  return VSOutput(\n   filterVertexPosition(aPosition),\n   filterTextureCoord(aPosition),\n   getFilterCoord(aPosition)\n  );\n}\n\n@fragment\nfn mainFragment(\n  @location(0) uv: vec2<f32>,\n  @location(1) filterUv: vec2<f32>,\n  @builtin(position) position: vec4<f32>\n) -> @location(0) vec4<f32> {\n\n    var maskClamp = filterUniforms.uMaskClamp;\n    var uAlpha = filterUniforms.uAlpha;\n\n    var clip = step(3.5,\n      step(maskClamp.x, filterUv.x) +\n      step(maskClamp.y, filterUv.y) +\n      step(filterUv.x, maskClamp.z) +\n      step(filterUv.y, maskClamp.w));\n\n    var mask = textureSample(uMaskTexture, uSampler, filterUv);\n    var source = textureSample(uTexture, uSampler, uv);\n    var alphaMul = 1.0 - uAlpha * (1.0 - mask.a);\n\n    var a: f32 = alphaMul * mask.r * uAlpha * clip;\n\n    if (filterUniforms.uInverse == 1.0) {\n        a = 1.0 - a;\n    }\n\n    return source * a;\n}\n";class ee extends Q{constructor(e){const{sprite:i,...o}=e,u=new n(i.texture),d=new s({uFilterMatrix:{value:new a,type:"mat3x3<f32>"},uMaskClamp:{value:u.uClampFrame,type:"vec4<f32>"},uAlpha:{value:1,type:"f32"},uInverse:{value:e.inverse?1:0,type:"f32"}});super({...o,gpuProgram:t.from({vertex:{source:Z,entryPoint:"mainVertex"},fragment:{source:Z,entryPoint:"mainFragment"}}),glProgram:r.from({vertex:"in vec2 aPosition;\n\nout vec2 vTextureCoord;\nout vec2 vMaskCoord;\n\n\nuniform vec4 uInputSize;\nuniform vec4 uOutputFrame;\nuniform vec4 uOutputTexture;\nuniform mat3 uFilterMatrix;\n\nvec4 filterVertexPosition(  vec2 aPosition )\n{\n    vec2 position = aPosition * uOutputFrame.zw + uOutputFrame.xy;\n       \n    position.x = position.x * (2.0 / uOutputTexture.x) - 1.0;\n    position.y = position.y * (2.0*uOutputTexture.z / uOutputTexture.y) - uOutputTexture.z;\n\n    return vec4(position, 0.0, 1.0);\n}\n\nvec2 filterTextureCoord(  vec2 aPosition )\n{\n    return aPosition * (uOutputFrame.zw * uInputSize.zw);\n}\n\nvec2 getFilterCoord( vec2 aPosition )\n{\n    return  ( uFilterMatrix * vec3( filterTextureCoord(aPosition), 1.0)  ).xy;\n}   \n\nvoid main(void)\n{\n    gl_Position = filterVertexPosition(aPosition);\n    vTextureCoord = filterTextureCoord(aPosition);\n    vMaskCoord = getFilterCoord(aPosition);\n}\n",fragment:"in vec2 vMaskCoord;\nin vec2 vTextureCoord;\n\nuniform sampler2D uTexture;\nuniform sampler2D uMaskTexture;\n\nuniform float uAlpha;\nuniform vec4 uMaskClamp;\nuniform float uInverse;\n\nout vec4 finalColor;\n\nvoid main(void)\n{\n    float clip = step(3.5,\n        step(uMaskClamp.x, vMaskCoord.x) +\n        step(uMaskClamp.y, vMaskCoord.y) +\n        step(vMaskCoord.x, uMaskClamp.z) +\n        step(vMaskCoord.y, uMaskClamp.w));\n\n    // TODO look into why this is needed\n    float npmAlpha = uAlpha;\n    vec4 original = texture(uTexture, vTextureCoord);\n    vec4 masky = texture(uMaskTexture, vMaskCoord);\n    float alphaMul = 1.0 - npmAlpha * (1.0 - masky.a);\n\n    float a = alphaMul * masky.r * npmAlpha * clip;\n\n    if (uInverse == 1.0) {\n        a = 1.0 - a;\n    }\n\n    finalColor = original * a;\n}\n",name:"mask-filter"}),clipToViewport:!1,resources:{filterUniforms:d,uMaskTexture:i.texture.source}}),this.sprite=i,this._textureMatrix=u}set inverse(e){this.resources.filterUniforms.uniforms.uInverse=e?1:0}get inverse(){return 1===this.resources.filterUniforms.uniforms.uInverse}apply(e,t,r,n){this._textureMatrix.texture=this.sprite.texture,e.calculateSpriteMatrix(this.resources.filterUniforms.uniforms.uFilterMatrix,this.sprite).prepend(this._textureMatrix.mapCoord),this.resources.uMaskTexture=this.sprite.texture.source,e.applyFilter(this,t,r,n)}}const te=class e{constructor(e,t){var r,n;this.state=K.for2d(),this._batchersByInstructionSet=Object.create(null),this._activeBatches=Object.create(null),this.renderer=e,this._adaptor=t,null==(n=(r=this._adaptor).init)||n.call(r,this)}static getBatcher(e){return new this._availableBatchers[e]}buildStart(e){let t=this._batchersByInstructionSet[e.uid];t||(t=this._batchersByInstructionSet[e.uid]=Object.create(null),t.default||(t.default=new i({maxTextures:this.renderer.limits.maxBatchableTextures}))),this._activeBatches=t,this._activeBatch=this._activeBatches.default;for(const r in this._activeBatches)this._activeBatches[r].begin()}addToBatch(t,r){if(this._activeBatch.name!==t.batcherName){this._activeBatch.break(r);let n=this._activeBatches[t.batcherName];n||(n=this._activeBatches[t.batcherName]=e.getBatcher(t.batcherName),n.begin()),this._activeBatch=n}this._activeBatch.add(t)}break(e){this._activeBatch.break(e)}buildEnd(e){this._activeBatch.break(e);const t=this._activeBatches;for(const r in t){const e=t[r],n=e.geometry;n.indexBuffer.setDataWithSize(e.indexBuffer,e.indexSize,!0),n.buffers[0].setDataWithSize(e.attributeBuffer.float32View,e.attributeSize,!1)}}upload(e){const t=this._batchersByInstructionSet[e.uid];for(const r in t){const e=t[r],n=e.geometry;e.dirty&&(e.dirty=!1,n.buffers[0].update(4*e.attributeSize))}}execute(e){if("startBatch"===e.action){const t=e.batcher;this._adaptor.start(this,t.geometry,t.shader)}this._adaptor.execute(this,e)}destroy(){this.state=null,this.renderer=null,this._adaptor=null;for(const e in this._activeBatches)this._activeBatches[e].destroy();this._activeBatches=null}};te.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"batch"},te._availableBatchers=Object.create(null);let re=te;u.handleByMap(o.Batcher,re._availableBatchers),u.add(i);const ne={name:"texture-bit",vertex:{header:"\n\n        struct TextureUniforms {\n            uTextureMatrix:mat3x3<f32>,\n        }\n\n        @group(2) @binding(2) var<uniform> textureUniforms : TextureUniforms;\n        ",main:"\n            uv = (textureUniforms.uTextureMatrix * vec3(uv, 1.0)).xy;\n        "},fragment:{header:"\n            @group(2) @binding(0) var uTexture: texture_2d<f32>;\n            @group(2) @binding(1) var uSampler: sampler;\n\n\n        ",main:"\n            outColor = textureSample(uTexture, uSampler, vUV);\n        "}},se={name:"texture-bit",vertex:{header:"\n            uniform mat3 uTextureMatrix;\n        ",main:"\n            uv = (uTextureMatrix * vec3(uv, 1.0)).xy;\n        "},fragment:{header:"\n        uniform sampler2D uTexture;\n\n\n        ",main:"\n            outColor = texture(uTexture, vUV);\n        "}},ae=new c;class ie extends f{constructor(){super(),this.filters=[new ee({sprite:new m(v.EMPTY),inverse:!1,resolution:"inherit",antialias:"inherit"})]}get sprite(){return this.filters[0].sprite}set sprite(e){this.filters[0].sprite=e}get inverse(){return this.filters[0].inverse}set inverse(e){this.filters[0].inverse=e}}class oe{constructor(e){this._activeMaskStage=[],this._renderer=e}push(e,t,r){const n=this._renderer;if(n.renderPipes.batch.break(r),r.add({renderPipeId:"alphaMask",action:"pushMaskBegin",mask:e,inverse:t._maskOptions.inverse,canBundle:!1,maskedContainer:t}),e.inverse=t._maskOptions.inverse,e.renderMaskToTexture){const t=e.mask;t.includeInBuild=!0,t.collectRenderables(r,n,null),t.includeInBuild=!1}n.renderPipes.batch.break(r),r.add({renderPipeId:"alphaMask",action:"pushMaskEnd",mask:e,maskedContainer:t,inverse:t._maskOptions.inverse,canBundle:!1})}pop(e,t,r){this._renderer.renderPipes.batch.break(r),r.add({renderPipeId:"alphaMask",action:"popMaskEnd",mask:e,inverse:t._maskOptions.inverse,canBundle:!1})}execute(e){const t=this._renderer,r=e.mask.renderMaskToTexture;if("pushMaskBegin"===e.action){const n=d.get(ie);if(n.inverse=e.inverse,r){e.mask.mask.measurable=!0;const r=l(e.mask.mask,!0,ae);e.mask.mask.measurable=!1,r.ceil();const s=t.renderTarget.renderTarget.colorTexture.source,a=h.getOptimalTexture(r.width,r.height,s._resolution,s.antialias);t.renderTarget.push(a,!0),t.globalUniforms.push({offset:r,worldColor:4294967295});const i=n.sprite;i.texture=a,i.worldTransform.tx=r.minX,i.worldTransform.ty=r.minY,this._activeMaskStage.push({filterEffect:n,maskedContainer:e.maskedContainer,filterTexture:a})}else n.sprite=e.mask.mask,this._activeMaskStage.push({filterEffect:n,maskedContainer:e.maskedContainer})}else if("pushMaskEnd"===e.action){const e=this._activeMaskStage[this._activeMaskStage.length-1];r&&(t.type===p.WEBGL&&t.renderTarget.finishRenderPass(),t.renderTarget.pop(),t.globalUniforms.pop()),t.filter.push({renderPipeId:"filter",action:"pushFilter",container:e.maskedContainer,filterEffect:e.filterEffect,canBundle:!1})}else if("popMaskEnd"===e.action){t.filter.pop();const e=this._activeMaskStage.pop();r&&h.returnTexture(e.filterTexture),d.return(e.filterEffect)}}destroy(){this._renderer=null,this._activeMaskStage=null}}oe.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"alphaMask"};class ue{constructor(e){this._colorStack=[],this._colorStackIndex=0,this._currentColor=0,this._renderer=e}buildStart(){this._colorStack[0]=15,this._colorStackIndex=1,this._currentColor=15}push(e,t,r){this._renderer.renderPipes.batch.break(r);const n=this._colorStack;n[this._colorStackIndex]=n[this._colorStackIndex-1]&e.mask;const s=this._colorStack[this._colorStackIndex];s!==this._currentColor&&(this._currentColor=s,r.add({renderPipeId:"colorMask",colorMask:s,canBundle:!1})),this._colorStackIndex++}pop(e,t,r){this._renderer.renderPipes.batch.break(r);const n=this._colorStack;this._colorStackIndex--;const s=n[this._colorStackIndex-1];s!==this._currentColor&&(this._currentColor=s,r.add({renderPipeId:"colorMask",colorMask:s,canBundle:!1}))}execute(e){this._renderer.colorMask.setMask(e.colorMask)}destroy(){this._renderer=null,this._colorStack=null}}ue.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"colorMask"};class de{constructor(e){this._maskStackHash={},this._maskHash=new WeakMap,this._renderer=e}push(e,t,r){var n;const s=e,a=this._renderer;a.renderPipes.batch.break(r),a.renderPipes.blendMode.setBlendMode(s.mask,"none",r),r.add({renderPipeId:"stencilMask",action:"pushMaskBegin",mask:e,inverse:t._maskOptions.inverse,canBundle:!1});const i=s.mask;i.includeInBuild=!0,this._maskHash.has(s)||this._maskHash.set(s,{instructionsStart:0,instructionsLength:0});const o=this._maskHash.get(s);o.instructionsStart=r.instructionSize,i.collectRenderables(r,a,null),i.includeInBuild=!1,a.renderPipes.batch.break(r),r.add({renderPipeId:"stencilMask",action:"pushMaskEnd",mask:e,inverse:t._maskOptions.inverse,canBundle:!1}),o.instructionsLength=r.instructionSize-o.instructionsStart-1;const u=a.renderTarget.renderTarget.uid;(n=this._maskStackHash)[u]??(n[u]=0)}pop(e,t,r){const n=e,s=this._renderer;s.renderPipes.batch.break(r),s.renderPipes.blendMode.setBlendMode(n.mask,"none",r),r.add({renderPipeId:"stencilMask",action:"popMaskBegin",inverse:t._maskOptions.inverse,canBundle:!1});const a=this._maskHash.get(e);for(let i=0;i<a.instructionsLength;i++)r.instructions[r.instructionSize++]=r.instructions[a.instructionsStart++];r.add({renderPipeId:"stencilMask",action:"popMaskEnd",canBundle:!1})}execute(e){var t;const r=this._renderer,n=r.renderTarget.renderTarget.uid;let s=(t=this._maskStackHash)[n]??(t[n]=0);"pushMaskBegin"===e.action?(r.renderTarget.ensureDepthStencil(),r.stencil.setStencilMode(g.RENDERING_MASK_ADD,s),s++,r.colorMask.setMask(0)):"pushMaskEnd"===e.action?(r.stencil.setStencilMode(e.inverse?g.INVERSE_MASK_ACTIVE:g.MASK_ACTIVE,s),r.colorMask.setMask(15)):"popMaskBegin"===e.action?(r.colorMask.setMask(0),0!==s?r.stencil.setStencilMode(g.RENDERING_MASK_REMOVE,s):(r.renderTarget.clear(null,_.STENCIL),r.stencil.setStencilMode(g.DISABLED,s)),s--):"popMaskEnd"===e.action&&(r.stencil.setStencilMode(e.inverse?g.INVERSE_MASK_ACTIVE:g.MASK_ACTIVE,s),r.colorMask.setMask(15)),this._maskStackHash[n]=s}destroy(){this._renderer=null,this._maskStackHash=null,this._maskHash=null}}function le(e,t){for(const r in e.attributes){const n=e.attributes[r],s=t[r];s?(n.format??(n.format=s.format),n.offset??(n.offset=s.offset),n.instance??(n.instance=s.instance)):x(`Attribute ${r} is not present in the shader, but is present in the geometry. Unable to infer attribute details.`)}!function(e){const{buffers:t,attributes:r}=e,n={},s={};for(const a in t){const e=t[a];n[e.uid]=0,s[e.uid]=0}for(const a in r){const e=r[a];n[e.buffer.uid]+=b(e.format).stride}for(const a in r){const e=r[a];e.stride??(e.stride=n[e.buffer.uid]),e.start??(e.start=s[e.buffer.uid]),s[e.buffer.uid]+=b(e.format).stride}}(e)}de.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"stencilMask"};const ce=[];ce[g.NONE]=void 0,ce[g.DISABLED]={stencilWriteMask:0,stencilReadMask:0},ce[g.RENDERING_MASK_ADD]={stencilFront:{compare:"equal",passOp:"increment-clamp"},stencilBack:{compare:"equal",passOp:"increment-clamp"}},ce[g.RENDERING_MASK_REMOVE]={stencilFront:{compare:"equal",passOp:"decrement-clamp"},stencilBack:{compare:"equal",passOp:"decrement-clamp"}},ce[g.MASK_ACTIVE]={stencilWriteMask:0,stencilFront:{compare:"equal",passOp:"keep"},stencilBack:{compare:"equal",passOp:"keep"}},ce[g.INVERSE_MASK_ACTIVE]={stencilWriteMask:0,stencilFront:{compare:"not-equal",passOp:"keep"},stencilBack:{compare:"not-equal",passOp:"keep"}};class he{constructor(e){this._syncFunctionHash=Object.create(null),this._adaptor=e,this._systemCheck()}_systemCheck(){if(!T())throw new Error("Current environment does not allow unsafe-eval, please use pixi.js/unsafe-eval module to enable support.")}ensureUniformGroup(e){const t=this.getUniformGroupData(e);e.buffer||(e.buffer=new y({data:new Float32Array(t.layout.size/4),usage:k.UNIFORM|k.COPY_DST}))}getUniformGroupData(e){return this._syncFunctionHash[e._signature]||this._initUniformGroup(e)}_initUniformGroup(e){const t=e._signature;let r=this._syncFunctionHash[t];if(!r){const n=Object.keys(e.uniformStructures).map(t=>e.uniformStructures[t]),s=this._adaptor.createUboElements(n),a=this._generateUboSync(s.uboElements);r=this._syncFunctionHash[t]={layout:s,syncFunction:a}}return this._syncFunctionHash[t]}_generateUboSync(e){return this._adaptor.generateUboSync(e)}syncUniformGroup(e,t,r){const n=this.getUniformGroupData(e);e.buffer||(e.buffer=new y({data:new Float32Array(n.layout.size/4),usage:k.UNIFORM|k.COPY_DST}));let s=null;return t||(t=e.buffer.data,s=e.buffer.dataInt32),r||(r=0),n.syncFunction(e.uniforms,t,s,r),!0}updateUniformGroup(e){if(e.isStatic&&!e._dirtyId)return!1;e._dirtyId=0;const t=this.syncUniformGroup(e);return e.buffer.update(),t}destroy(){this._syncFunctionHash=null}}const pe=[{type:"mat3x3<f32>",test:e=>void 0!==e.value.a,ubo:"\n            var matrix = uv[name].toArray(true);\n            data[offset] = matrix[0];\n            data[offset + 1] = matrix[1];\n            data[offset + 2] = matrix[2];\n            data[offset + 4] = matrix[3];\n            data[offset + 5] = matrix[4];\n            data[offset + 6] = matrix[5];\n            data[offset + 8] = matrix[6];\n            data[offset + 9] = matrix[7];\n            data[offset + 10] = matrix[8];\n        ",uniform:"\n            gl.uniformMatrix3fv(ud[name].location, false, uv[name].toArray(true));\n        "},{type:"vec4<f32>",test:e=>"vec4<f32>"===e.type&&1===e.size&&void 0!==e.value.width,ubo:"\n            v = uv[name];\n            data[offset] = v.x;\n            data[offset + 1] = v.y;\n            data[offset + 2] = v.width;\n            data[offset + 3] = v.height;\n        ",uniform:"\n            cv = ud[name].value;\n            v = uv[name];\n            if (cv[0] !== v.x || cv[1] !== v.y || cv[2] !== v.width || cv[3] !== v.height) {\n                cv[0] = v.x;\n                cv[1] = v.y;\n                cv[2] = v.width;\n                cv[3] = v.height;\n                gl.uniform4f(ud[name].location, v.x, v.y, v.width, v.height);\n            }\n        "},{type:"vec2<f32>",test:e=>"vec2<f32>"===e.type&&1===e.size&&void 0!==e.value.x,ubo:"\n            v = uv[name];\n            data[offset] = v.x;\n            data[offset + 1] = v.y;\n        ",uniform:"\n            cv = ud[name].value;\n            v = uv[name];\n            if (cv[0] !== v.x || cv[1] !== v.y) {\n                cv[0] = v.x;\n                cv[1] = v.y;\n                gl.uniform2f(ud[name].location, v.x, v.y);\n            }\n        "},{type:"vec4<f32>",test:e=>"vec4<f32>"===e.type&&1===e.size&&void 0!==e.value.red,ubo:"\n            v = uv[name];\n            data[offset] = v.red;\n            data[offset + 1] = v.green;\n            data[offset + 2] = v.blue;\n            data[offset + 3] = v.alpha;\n        ",uniform:"\n            cv = ud[name].value;\n            v = uv[name];\n            if (cv[0] !== v.red || cv[1] !== v.green || cv[2] !== v.blue || cv[3] !== v.alpha) {\n                cv[0] = v.red;\n                cv[1] = v.green;\n                cv[2] = v.blue;\n                cv[3] = v.alpha;\n                gl.uniform4f(ud[name].location, v.red, v.green, v.blue, v.alpha);\n            }\n        "},{type:"vec3<f32>",test:e=>"vec3<f32>"===e.type&&1===e.size&&void 0!==e.value.red,ubo:"\n            v = uv[name];\n            data[offset] = v.red;\n            data[offset + 1] = v.green;\n            data[offset + 2] = v.blue;\n        ",uniform:"\n            cv = ud[name].value;\n            v = uv[name];\n            if (cv[0] !== v.red || cv[1] !== v.green || cv[2] !== v.blue) {\n                cv[0] = v.red;\n                cv[1] = v.green;\n                cv[2] = v.blue;\n                gl.uniform3f(ud[name].location, v.red, v.green, v.blue);\n            }\n        "}];function fe(e,t,r,n){const s=["\n        var v = null;\n        var v2 = null;\n        var t = 0;\n        var index = 0;\n        var name = null;\n        var arrayOffset = null;\n    "];let a=0;for(let o=0;o<e.length;o++){const i=e[o],u=i.data.name;let d=!1,l=0;for(let e=0;e<pe.length;e++)if(pe[e].test(i.data)){l=i.offset/4,s.push(`name = "${u}";`,`offset += ${l-a};`,pe[e][t]||pe[e].ubo),d=!0;break}d||(i.data.size>1?(l=i.offset/4,s.push(r(i,l-a))):(l=i.offset/4,s.push(`\n                    v = uv.${u};\n                    offset += ${l-a};\n                    ${n[i.data.type]};\n                `))),a=l}const i=s.join("\n");return new Function("uv","data","dataInt32","offset",i)}function me(e,t){return`\n        for (let i = 0; i < ${e*t}; i++) {\n            data[offset + (((i / ${e})|0) * 4) + (i % ${e})] = v[i];\n        }\n    `}const ve={f32:"\n        data[offset] = v;",i32:"\n        dataInt32[offset] = v;","vec2<f32>":"\n        data[offset] = v[0];\n        data[offset + 1] = v[1];","vec3<f32>":"\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];","vec4<f32>":"\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 3] = v[3];","vec2<i32>":"\n        dataInt32[offset] = v[0];\n        dataInt32[offset + 1] = v[1];","vec3<i32>":"\n        dataInt32[offset] = v[0];\n        dataInt32[offset + 1] = v[1];\n        dataInt32[offset + 2] = v[2];","vec4<i32>":"\n        dataInt32[offset] = v[0];\n        dataInt32[offset + 1] = v[1];\n        dataInt32[offset + 2] = v[2];\n        dataInt32[offset + 3] = v[3];","mat2x2<f32>":"\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 4] = v[2];\n        data[offset + 5] = v[3];","mat3x3<f32>":"\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 4] = v[3];\n        data[offset + 5] = v[4];\n        data[offset + 6] = v[5];\n        data[offset + 8] = v[6];\n        data[offset + 9] = v[7];\n        data[offset + 10] = v[8];","mat4x4<f32>":"\n        for (let i = 0; i < 16; i++) {\n            data[offset + i] = v[i];\n        }","mat3x2<f32>":me(3,2),"mat4x2<f32>":me(4,2),"mat2x3<f32>":me(2,3),"mat4x3<f32>":me(4,3),"mat2x4<f32>":me(2,4),"mat3x4<f32>":me(3,4)},ge={...ve,"mat2x2<f32>":"\n        data[offset] = v[0];\n        data[offset + 1] = v[1];\n        data[offset + 2] = v[2];\n        data[offset + 3] = v[3];\n    "},_e=new Map;function xe(e,t){if(!_e.has(e)){const r=new v({source:new C({resource:e,...t})}),n=()=>{_e.get(e)===r&&_e.delete(e)};r.once("destroy",n),r.source.once("destroy",n),_e.set(e,r)}return _e.get(e)}M.register(_e);const be=class e{constructor(t={}){if(this.uid=S("renderTarget"),this.colorTextures=[],this.dirtyId=0,this.isRoot=!1,this._size=new Float32Array(2),this._managedColorTextures=!1,t={...e.defaultOptions,...t},this.stencil=t.stencil,this.depth=t.depth,this.isRoot=t.isRoot,"number"==typeof t.colorTextures){this._managedColorTextures=!0;for(let e=0;e<t.colorTextures;e++)this.colorTextures.push(new w({width:t.width,height:t.height,resolution:t.resolution,antialias:t.antialias}))}else{this.colorTextures=[...t.colorTextures.map(e=>e.source)];const e=this.colorTexture.source;this.resize(e.width,e.height,e._resolution)}this.colorTexture.source.on("resize",this.onSourceResize,this),(t.depthStencilTexture||this.stencil)&&(t.depthStencilTexture instanceof v||t.depthStencilTexture instanceof w?this.depthStencilTexture=t.depthStencilTexture.source:this.ensureDepthStencilTexture())}get size(){const e=this._size;return e[0]=this.pixelWidth,e[1]=this.pixelHeight,e}get width(){return this.colorTexture.source.width}get height(){return this.colorTexture.source.height}get pixelWidth(){return this.colorTexture.source.pixelWidth}get pixelHeight(){return this.colorTexture.source.pixelHeight}get resolution(){return this.colorTexture.source._resolution}get colorTexture(){return this.colorTextures[0]}onSourceResize(e){this.resize(e.width,e.height,e._resolution,!0)}ensureDepthStencilTexture(){this.depthStencilTexture||(this.depthStencilTexture=new w({width:this.width,height:this.height,resolution:this.resolution,format:"depth24plus-stencil8",autoGenerateMipmaps:!1,antialias:!1,mipLevelCount:1}))}resize(e,t,r=this.resolution,n=!1){this.dirtyId++,this.colorTextures.forEach((s,a)=>{n&&0===a||s.source.resize(e,t,r)}),this.depthStencilTexture&&this.depthStencilTexture.source.resize(e,t,r)}destroy(){this.colorTexture.source.off("resize",this.onSourceResize,this),this._managedColorTextures&&this.colorTextures.forEach(e=>{e.destroy()}),this.depthStencilTexture&&(this.depthStencilTexture.destroy(),delete this.depthStencilTexture)}};be.defaultOptions={width:0,height:0,resolution:1,colorTextures:1,stencil:!1,depth:!1,antialias:!1,isRoot:!1};let Te=be;class ye{constructor(e){this.rootViewPort=new G,this.viewport=new G,this.onRenderTargetChange=new P("onRenderTargetChange"),this.projectionMatrix=new a,this.defaultClearColor=[0,0,0,0],this._renderSurfaceToRenderTargetHash=new Map,this._gpuRenderTargetHash=Object.create(null),this._renderTargetStack=[],this._renderer=e,e.renderableGC.addManagedHash(this,"_gpuRenderTargetHash")}finishRenderPass(){this.adaptor.finishRenderPass(this.renderTarget)}renderStart({target:e,clear:t,clearColor:r,frame:n}){var s,a;this._renderTargetStack.length=0,this.push(e,t,r,n),this.rootViewPort.copyFrom(this.viewport),this.rootRenderTarget=this.renderTarget,this.renderingToScreen=function(e){const t=e.colorTexture.source.resource;return globalThis.HTMLCanvasElement&&t instanceof HTMLCanvasElement&&document.body.contains(t)}(this.rootRenderTarget),null==(a=(s=this.adaptor).prerender)||a.call(s,this.rootRenderTarget)}postrender(){var e,t;null==(t=(e=this.adaptor).postrender)||t.call(e,this.rootRenderTarget)}bind(e,t=!0,r,n){const s=this.getRenderTarget(e),a=this.renderTarget!==s;this.renderTarget=s,this.renderSurface=e;const i=this.getGpuRenderTarget(s);s.pixelWidth===i.width&&s.pixelHeight===i.height||(this.adaptor.resizeGpuRenderTarget(s),i.width=s.pixelWidth,i.height=s.pixelHeight);const o=s.colorTexture,u=this.viewport,d=o.pixelWidth,l=o.pixelHeight;if(!n&&e instanceof v&&(n=e.frame),n){const e=o._resolution;u.x=n.x*e+.5|0,u.y=n.y*e+.5|0,u.width=n.width*e+.5|0,u.height=n.height*e+.5|0}else u.x=0,u.y=0,u.width=d,u.height=l;return function(e,t,r,n,s,a){const i=a?1:-1;e.identity(),e.a=1/n*2,e.d=i*(1/s*2),e.tx=-1-0*e.a,e.ty=-i-0*e.d}(this.projectionMatrix,0,0,u.width/o.resolution,u.height/o.resolution,!s.isRoot),this.adaptor.startRenderPass(s,t,r,u),a&&this.onRenderTargetChange.emit(s),s}clear(e,t=_.ALL,r){t&&(e&&(e=this.getRenderTarget(e)),this.adaptor.clear(e||this.renderTarget,t,r,this.viewport))}contextChange(){this._gpuRenderTargetHash=Object.create(null)}push(e,t=_.ALL,r,n){const s=this.bind(e,t,r,n);return this._renderTargetStack.push({renderTarget:s,frame:n}),s}pop(){this._renderTargetStack.pop();const e=this._renderTargetStack[this._renderTargetStack.length-1];this.bind(e.renderTarget,!1,null,e.frame)}getRenderTarget(e){return e.isTexture&&(e=e.source),this._renderSurfaceToRenderTargetHash.get(e)??this._initRenderTarget(e)}copyToTexture(e,t,r,n,s){r.x<0&&(n.width+=r.x,s.x-=r.x,r.x=0),r.y<0&&(n.height+=r.y,s.y-=r.y,r.y=0);const{pixelWidth:a,pixelHeight:i}=e;return n.width=Math.min(n.width,a-r.x),n.height=Math.min(n.height,i-r.y),this.adaptor.copyToTexture(e,t,r,n,s)}ensureDepthStencil(){this.renderTarget.stencil||(this.renderTarget.stencil=!0,this.adaptor.startRenderPass(this.renderTarget,!1,null,this.viewport))}destroy(){this._renderer=null,this._renderSurfaceToRenderTargetHash.forEach((e,t)=>{e!==t&&e.destroy()}),this._renderSurfaceToRenderTargetHash.clear(),this._gpuRenderTargetHash=Object.create(null)}_initRenderTarget(e){let t=null;return C.test(e)&&(e=xe(e).source),e instanceof Te?t=e:e instanceof w&&(t=new Te({colorTextures:[e]}),e.source instanceof C&&(t.isRoot=!0),e.once("destroy",()=>{t.destroy(),this._renderSurfaceToRenderTargetHash.delete(e);const r=this._gpuRenderTargetHash[t.uid];r&&(this._gpuRenderTargetHash[t.uid]=null,this.adaptor.destroyGpuRenderTarget(r))})),this._renderSurfaceToRenderTargetHash.set(e,t),t}getGpuRenderTarget(e){return this._gpuRenderTargetHash[e.uid]||(this._gpuRenderTargetHash[e.uid]=this.adaptor.initGpuRenderTarget(e))}resetState(){this.renderTarget=null,this.renderSurface=null}}class ke extends R{constructor({buffer:e,offset:t,size:r}){super(),this.uid=S("buffer"),this._resourceType="bufferResource",this._touched=0,this._resourceId=S("resource"),this._bufferResource=!0,this.destroyed=!1,this.buffer=e,this.offset=0|t,this.size=r,this.buffer.on("change",this.onBufferChange,this)}onBufferChange(){this._resourceId=S("resource"),this.emit("change",this)}destroy(e=!1){this.destroyed=!0,e&&this.buffer.destroy(),this.emit("change",this),this.buffer=null}}class Ce{constructor(e){this._renderer=e}updateRenderable(){}destroyRenderable(){}validateRenderable(){return!1}addRenderable(e,t){this._renderer.renderPipes.batch.break(t),t.add(e)}execute(e){e.isRenderable&&e.render(this._renderer)}destroy(){this._renderer=null}}function Me(e,t){const r=e.instructionSet,n=r.instructions;for(let s=0;s<r.instructionSize;s++){const e=n[s];t[e.renderPipeId].execute(e)}}Ce.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"customRender"};const Se=new a;class we{constructor(e){this._renderer=e}addRenderGroup(e,t){e.isCachedAsTexture?this._addRenderableCacheAsTexture(e,t):this._addRenderableDirect(e,t)}execute(e){e.isRenderable&&(e.isCachedAsTexture?this._executeCacheAsTexture(e):this._executeDirect(e))}destroy(){this._renderer=null}_addRenderableDirect(e,t){this._renderer.renderPipes.batch.break(t),e._batchableRenderGroup&&(d.return(e._batchableRenderGroup),e._batchableRenderGroup=null),t.add(e)}_addRenderableCacheAsTexture(e,t){const r=e._batchableRenderGroup??(e._batchableRenderGroup=d.get(Y));r.renderable=e.root,r.transform=e.root.relativeGroupTransform,r.texture=e.texture,r.bounds=e._textureBounds,t.add(e),this._renderer.renderPipes.blendMode.pushBlendMode(e,e.root.groupBlendMode,t),this._renderer.renderPipes.batch.addToBatch(r,t),this._renderer.renderPipes.blendMode.popBlendMode(t)}_executeCacheAsTexture(e){if(e.textureNeedsUpdate){e.textureNeedsUpdate=!1;const t=Se.identity().translate(-e._textureBounds.x,-e._textureBounds.y);this._renderer.renderTarget.push(e.texture,!0,null,e.texture.frame),this._renderer.globalUniforms.push({worldTransformMatrix:t,worldColor:4294967295,offset:{x:0,y:0}}),Me(e,this._renderer.renderPipes),this._renderer.renderTarget.finishRenderPass(),this._renderer.renderTarget.pop(),this._renderer.globalUniforms.pop()}e._batchableRenderGroup._batcher.updateElement(e._batchableRenderGroup),e._batchableRenderGroup._batcher.geometry.buffers[0].update()}_executeDirect(e){this._renderer.globalUniforms.push({worldTransformMatrix:e.inverseParentTextureTransform,worldColor:e.worldColorAlpha}),Me(e,this._renderer.renderPipes),this._renderer.globalUniforms.pop()}}function Ge(e,t){t||(t=0);for(let r=t;r<e.length&&e[r];r++)e[r]=null}we.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"renderGroup"};const Pe=new O,Re=U|A|I;function Be(e,t=!1){!function(e){const t=e.root;let r;if(e.renderGroupParent){const n=e.renderGroupParent;e.worldTransform.appendFrom(t.relativeGroupTransform,n.worldTransform),e.worldColor=B(t.groupColor,n.worldColor),r=t.groupAlpha*n.worldAlpha}else e.worldTransform.copyFrom(t.localTransform),e.worldColor=t.localColor,r=t.localAlpha;r=r<0?0:r>1?1:r,e.worldAlpha=r,e.worldColorAlpha=e.worldColor+(255*r<<24)}(e);const r=e.childrenToUpdate,n=e.updateTick++;for(const s in r){const t=Number(s),a=r[s],i=a.list,o=a.index;for(let r=0;r<o;r++){const s=i[r];s.parentRenderGroup===e&&s.relativeRenderGroupDepth===t&&Ue(s,n,0)}Ge(i,o),a.index=0}if(t)for(let s=0;s<e.renderGroupChildren.length;s++)Be(e.renderGroupChildren[s],t)}function Ue(e,t,r){if(t===e.updateTick)return;e.updateTick=t,e.didChange=!1;const n=e.localTransform;e.updateLocalTransform();const s=e.parent;if(s&&!s.renderGroup?(r|=e._updateFlags,e.relativeGroupTransform.appendFrom(n,s.relativeGroupTransform),r&Re&&Ae(e,s,r)):(r=e._updateFlags,e.relativeGroupTransform.copyFrom(n),r&Re&&Ae(e,Pe,r)),!e.renderGroup){const n=e.children,s=n.length;for(let e=0;e<s;e++)Ue(n[e],t,r);const a=e.parentRenderGroup;e.renderPipeId&&!a.structureDidChange&&a.updateRenderable(e)}}function Ae(e,t,r){if(r&A){e.groupColor=B(e.localColor,t.groupColor);let r=e.localAlpha*t.groupAlpha;r=r<0?0:r>1?1:r,e.groupAlpha=r,e.groupColorAlpha=e.groupColor+(255*r<<24)}r&I&&(e.groupBlendMode="inherit"===e.localBlendMode?t.groupBlendMode:e.localBlendMode),r&U&&(e.globalDisplayStatus=e.localDisplayStatus&t.globalDisplayStatus),e._updateFlags=0}const Ie=new a;class Oe{constructor(e){this._renderer=e}render({container:e,transform:t}){const r=e.parent,n=e.renderGroup.renderGroupParent;e.parent=null,e.renderGroup.renderGroupParent=null;const s=this._renderer,a=Ie;t&&(a.copyFrom(e.renderGroup.localTransform),e.renderGroup.localTransform.copyFrom(t));const i=s.renderPipes;this._updateCachedRenderGroups(e.renderGroup,null),this._updateRenderGroups(e.renderGroup),s.globalUniforms.start({worldTransformMatrix:t?e.renderGroup.localTransform:e.renderGroup.worldTransform,worldColor:e.renderGroup.worldColorAlpha}),Me(e.renderGroup,i),i.uniformBatch&&i.uniformBatch.renderEnd(),t&&e.renderGroup.localTransform.copyFrom(a),e.parent=r,e.renderGroup.renderGroupParent=n}destroy(){this._renderer=null}_updateCachedRenderGroups(e,t){if(e._parentCacheAsTextureRenderGroup=t,e.isCachedAsTexture){if(!e.textureNeedsUpdate)return;t=e}for(let r=e.renderGroupChildren.length-1;r>=0;r--)this._updateCachedRenderGroups(e.renderGroupChildren[r],t);if(e.invalidateMatrices(),e.isCachedAsTexture){if(e.textureNeedsUpdate){const t=e.root.getLocalBounds();t.ceil();const r=e.texture;e.texture&&h.returnTexture(e.texture,!0);const n=this._renderer,s=e.textureOptions.scaleMode??"linear",a=h.getOptimalTexture(t.width,t.height,e.textureOptions.resolution||n.view.resolution,e.textureOptions.antialias??n.view.antialias);a._source.style=new F({scaleMode:s}),e.texture=a,e._textureBounds||(e._textureBounds=new c),e._textureBounds.copyFrom(t),r!==e.texture&&e.renderGroupParent&&(e.renderGroupParent.structureDidChange=!0)}}else e.texture&&(h.returnTexture(e.texture,!0),e.texture=null)}_updateRenderGroups(e){const t=this._renderer,r=t.renderPipes;if(e.runOnRender(t),e.instructionSet.renderPipes=r,e.structureDidChange?Ge(e.childrenRenderablesToUpdate.list,0):function(e,t){const{list:r,index:n}=e.childrenRenderablesToUpdate;let s=!1;for(let a=0;a<n;a++){const e=r[a];if(s=t[e.renderPipeId].validateRenderable(e),s)break}e.structureDidChange=s}(e,r),Be(e),e.structureDidChange?(e.structureDidChange=!1,this._buildInstructions(e,t)):this._updateRenderables(e),e.childrenRenderablesToUpdate.index=0,t.renderPipes.batch.upload(e.instructionSet),!e.isCachedAsTexture||e.textureNeedsUpdate)for(let n=0;n<e.renderGroupChildren.length;n++)this._updateRenderGroups(e.renderGroupChildren[n])}_updateRenderables(e){const{list:t,index:r}=e.childrenRenderablesToUpdate;for(let n=0;n<r;n++){const r=t[n];r.didViewUpdate&&e.updateRenderable(r)}Ge(t,r)}_buildInstructions(e,t){const r=e.root,n=e.instructionSet;n.reset();const s=t.renderPipes?t:t.batch.renderer,a=s.renderPipes;a.batch.buildStart(n),a.blendMode.buildStart(),a.colorMask.buildStart(),r.sortableChildren&&r.sortChildren(),r.collectRenderablesWithEffects(n,s,null),a.batch.buildEnd(n),a.blendMode.buildEnd(n)}}Oe.extension={type:[o.WebGLSystem,o.WebGPUSystem,o.CanvasSystem],name:"renderGroup"};class Fe{constructor(e){this._renderer=e}addRenderable(e,t){const r=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,r),this._renderer.renderPipes.batch.addToBatch(r,t)}updateRenderable(e){const t=this._getGpuSprite(e);e.didViewUpdate&&this._updateBatchableSprite(e,t),t._batcher.updateElement(t)}validateRenderable(e){const t=this._getGpuSprite(e);return!t._batcher.checkAndUpdateTexture(t,e._texture)}_updateBatchableSprite(e,t){t.bounds=e.visualBounds,t.texture=e._texture}_getGpuSprite(e){return e._gpuData[this._renderer.uid]||this._initGPUSprite(e)}_initGPUSprite(e){const t=new Y;return t.renderable=e,t.transform=e.groupTransform,t.texture=e._texture,t.bounds=e.visualBounds,t.roundPixels=this._renderer._roundPixels|e._roundPixels,e._gpuData[this._renderer.uid]=t,t}destroy(){this._renderer=null}}Fe.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"sprite"};const Ee=class e{constructor(){this.clearBeforeRender=!0,this._backgroundColor=new E(0),this.color=this._backgroundColor,this.alpha=1}init(t){t={...e.defaultOptions,...t},this.clearBeforeRender=t.clearBeforeRender,this.color=t.background||t.backgroundColor||this._backgroundColor,this.alpha=t.backgroundAlpha,this._backgroundColor.setAlpha(t.backgroundAlpha)}get color(){return this._backgroundColor}set color(e){E.shared.setValue(e).alpha<1&&1===this._backgroundColor.alpha&&x("Cannot set a transparent background on an opaque canvas. To enable transparency, set backgroundAlpha < 1 when initializing your Application."),this._backgroundColor.setValue(e)}get alpha(){return this._backgroundColor.alpha}set alpha(e){this._backgroundColor.setAlpha(e)}get colorRgba(){return this._backgroundColor.toArray()}destroy(){}};Ee.extension={type:[o.WebGLSystem,o.WebGPUSystem,o.CanvasSystem],name:"background",priority:0},Ee.defaultOptions={backgroundAlpha:1,backgroundColor:0,clearBeforeRender:!0};let De=Ee;const ze={};u.handle(o.BlendMode,e=>{if(!e.name)throw new Error("BlendMode extension must have a name property");ze[e.name]=e.ref},e=>{delete ze[e.name]});class We{constructor(e){this._blendModeStack=[],this._isAdvanced=!1,this._filterHash=Object.create(null),this._renderer=e,this._renderer.runners.prerender.add(this)}prerender(){this._activeBlendMode="normal",this._isAdvanced=!1}pushBlendMode(e,t,r){this._blendModeStack.push(t),this.setBlendMode(e,t,r)}popBlendMode(e){this._blendModeStack.pop(),this.setBlendMode(null,this._blendModeStack[this._activeBlendMode.length-1]??"normal",e)}setBlendMode(e,t,r){var n;const s=e instanceof D;this._activeBlendMode!==t?(this._isAdvanced&&this._endAdvancedBlendMode(r),this._activeBlendMode=t,e&&(this._isAdvanced=!!ze[t],this._isAdvanced&&this._beginAdvancedBlendMode(e,r))):this._isAdvanced&&e&&!s&&(null==(n=this._renderableList)||n.push(e))}_beginAdvancedBlendMode(e,t){this._renderer.renderPipes.batch.break(t);const r=this._activeBlendMode;if(!ze[r])return void x(`Unable to assign BlendMode: '${r}'. You may want to include: import 'pixi.js/advanced-blend-modes'`);const n=this._ensureFilterEffect(r),s=e instanceof D,a={renderPipeId:"filter",action:"pushFilter",filterEffect:n,renderables:s?null:[e],container:s?e.root:null,canBundle:!1};this._renderableList=a.renderables,t.add(a)}_ensureFilterEffect(e){let t=this._filterHash[e];return t||(t=this._filterHash[e]=new f,t.filters=[new ze[e]]),t}_endAdvancedBlendMode(e){this._isAdvanced=!1,this._renderableList=null,this._renderer.renderPipes.batch.break(e),e.add({renderPipeId:"filter",action:"popFilter",canBundle:!1})}buildStart(){this._isAdvanced=!1}buildEnd(e){this._isAdvanced&&this._endAdvancedBlendMode(e)}destroy(){this._renderer=null,this._renderableList=null;for(const e in this._filterHash)this._filterHash[e].destroy();this._filterHash=null}}We.extension={type:[o.WebGLPipes,o.WebGPUPipes,o.CanvasPipes],name:"blendMode"};const He={png:"image/png",jpg:"image/jpeg",webp:"image/webp"},Le=class e{constructor(e){this._renderer=e}_normalizeOptions(e,t={}){return e instanceof O||e instanceof v?{target:e,...t}:{...t,...e}}async image(e){const t=z.get().createImage();return t.src=await this.base64(e),t}async base64(t){t=this._normalizeOptions(t,e.defaultImageOptions);const{format:r,quality:n}=t,s=this.canvas(t);if(void 0!==s.toBlob)return new Promise((e,t)=>{s.toBlob(r=>{if(!r)return void t(new Error("ICanvas.toBlob failed!"));const n=new FileReader;n.onload=()=>e(n.result),n.onerror=t,n.readAsDataURL(r)},He[r],n)});if(void 0!==s.toDataURL)return s.toDataURL(He[r],n);if(void 0!==s.convertToBlob){const e=await s.convertToBlob({type:He[r],quality:n});return new Promise((t,r)=>{const n=new FileReader;n.onload=()=>t(n.result),n.onerror=r,n.readAsDataURL(e)})}throw new Error("Extract.base64() requires ICanvas.toDataURL, ICanvas.toBlob, or ICanvas.convertToBlob to be implemented")}canvas(e){const t=(e=this._normalizeOptions(e)).target,r=this._renderer;if(t instanceof v)return r.texture.generateCanvas(t);const n=r.textureGenerator.generateTexture(e),s=r.texture.generateCanvas(n);return n.destroy(!0),s}pixels(e){const t=(e=this._normalizeOptions(e)).target,r=this._renderer,n=t instanceof v?t:r.textureGenerator.generateTexture(e),s=r.texture.getPixels(n);return t instanceof O&&n.destroy(!0),s}texture(e){return(e=this._normalizeOptions(e)).target instanceof v?e.target:this._renderer.textureGenerator.generateTexture(e)}download(e){e=this._normalizeOptions(e);const t=this.canvas(e),r=document.createElement("a");r.download=e.filename??"image.png",r.href=t.toDataURL("image/png"),document.body.appendChild(r),r.click(),document.body.removeChild(r)}log(e){const t=e.width??200;e=this._normalizeOptions(e),["font-size: 1px;",`padding: ${t}px 300px;`,`background: url(${this.canvas(e).toDataURL()}) no-repeat;`,"background-size: contain;"].join(" ")}destroy(){this._renderer=null}};Le.extension={type:[o.WebGLSystem,o.WebGPUSystem],name:"extract"},Le.defaultImageOptions={format:"png",quality:1};let Ve=Le;class je extends v{static create(e){return new je({source:new w(e)})}resize(e,t,r){return this.source.resize(e,t,r),this}}const Ne=new G,qe=new c,$e=[0,0,0,0];class Ke{constructor(e){this._renderer=e}generateTexture(e){var t;e instanceof O&&(e={target:e,frame:void 0,textureSourceOptions:{},resolution:void 0});const r=e.resolution||this._renderer.resolution,n=e.antialias||this._renderer.view.antialias,s=e.target;let i=e.clearColor;i=i?Array.isArray(i)&&4===i.length?i:E.shared.setValue(i).toArray():$e;const o=(null==(t=e.frame)?void 0:t.copyTo(Ne))||W(s,qe).rectangle;o.width=0|Math.max(o.width,1/r),o.height=0|Math.max(o.height,1/r);const u=je.create({...e.textureSourceOptions,width:o.width,height:o.height,resolution:r,antialias:n}),d=a.shared.translate(-o.x,-o.y);return this._renderer.render({container:s,transform:d,target:u,clearColor:i}),u.source.updateMipmaps(),u}destroy(){this._renderer=null}}Ke.extension={type:[o.WebGLSystem,o.WebGPUSystem],name:"textureGenerator"};class Ye{constructor(e){this._stackIndex=0,this._globalUniformDataStack=[],this._uniformsPool=[],this._activeUniforms=[],this._bindGroupPool=[],this._activeBindGroups=[],this._renderer=e}reset(){this._stackIndex=0;for(let e=0;e<this._activeUniforms.length;e++)this._uniformsPool.push(this._activeUniforms[e]);for(let e=0;e<this._activeBindGroups.length;e++)this._bindGroupPool.push(this._activeBindGroups[e]);this._activeUniforms.length=0,this._activeBindGroups.length=0}start(e){this.reset(),this.push(e)}bind({size:e,projectionMatrix:t,worldTransformMatrix:r,worldColor:n,offset:s}){const i=this._renderer.renderTarget.renderTarget,o=this._stackIndex?this._globalUniformDataStack[this._stackIndex-1]:{worldTransformMatrix:new a,worldColor:4294967295,offset:new H},u={projectionMatrix:t||this._renderer.renderTarget.projectionMatrix,resolution:e||i.size,worldTransformMatrix:r||o.worldTransformMatrix,worldColor:n||o.worldColor,offset:s||o.offset,bindGroup:null},d=this._uniformsPool.pop()||this._createUniforms();this._activeUniforms.push(d);const l=d.uniforms;let c;l.uProjectionMatrix=u.projectionMatrix,l.uResolution=u.resolution,l.uWorldTransformMatrix.copyFrom(u.worldTransformMatrix),l.uWorldTransformMatrix.tx-=u.offset.x,l.uWorldTransformMatrix.ty-=u.offset.y,J(u.worldColor,l.uWorldColorAlpha,0),d.update(),this._renderer.renderPipes.uniformBatch?c=this._renderer.renderPipes.uniformBatch.getUniformBindGroup(d,!1):(c=this._bindGroupPool.pop()||new L,this._activeBindGroups.push(c),c.setResource(d,0)),u.bindGroup=c,this._currentGlobalUniformData=u}push(e){this.bind(e),this._globalUniformDataStack[this._stackIndex++]=this._currentGlobalUniformData}pop(){this._currentGlobalUniformData=this._globalUniformDataStack[--this._stackIndex-1],this._renderer.type===p.WEBGL&&this._currentGlobalUniformData.bindGroup.resources[0].update()}get bindGroup(){return this._currentGlobalUniformData.bindGroup}get globalUniformData(){return this._currentGlobalUniformData}get uniformGroup(){return this._currentGlobalUniformData.bindGroup.resources[0]}_createUniforms(){return new s({uProjectionMatrix:{value:new a,type:"mat3x3<f32>"},uWorldTransformMatrix:{value:new a,type:"mat3x3<f32>"},uWorldColorAlpha:{value:new Float32Array(4),type:"vec4<f32>"},uResolution:{value:[0,0],type:"vec2<f32>"}},{isStatic:!0})}destroy(){this._renderer=null,this._globalUniformDataStack.length=0,this._uniformsPool.length=0,this._activeUniforms.length=0,this._bindGroupPool.length=0,this._activeBindGroups.length=0,this._currentGlobalUniformData=null}}Ye.extension={type:[o.WebGLSystem,o.WebGPUSystem,o.CanvasSystem],name:"globalUniforms"};let Je=1;class Xe{constructor(){this._tasks=[],this._offset=0}init(){V.system.add(this._update,this)}repeat(e,t,r=!0){const n=Je++;let s=0;return r&&(this._offset+=1e3,s=this._offset),this._tasks.push({func:e,duration:t,start:performance.now(),offset:s,last:performance.now(),repeat:!0,id:n}),n}cancel(e){for(let t=0;t<this._tasks.length;t++)if(this._tasks[t].id===e)return void this._tasks.splice(t,1)}_update(){const e=performance.now();for(let t=0;t<this._tasks.length;t++){const r=this._tasks[t];e-r.offset-r.last>=r.duration&&(r.func(e-r.start),r.last=e)}}destroy(){V.system.remove(this._update,this),this._tasks.length=0}}Xe.extension={type:[o.WebGLSystem,o.WebGPUSystem,o.CanvasSystem],name:"scheduler",priority:0};let Qe=!1;class Ze{constructor(e){this._renderer=e}init(e){if(e.hello){let e=this._renderer.name;this._renderer.type===p.WEBGL&&(e+=` ${this._renderer.context.webGLVersion}`),t=e,Qe||(z.get().getNavigator().userAgent.toLowerCase().indexOf("chrome")>-1?globalThis.console.log(`%c  %c  %c  %c  %c PixiJS %c v${j} (${t}) http://www.pixijs.com/\n\n`,"background: #E72264; padding:5px 0;","background: #6CA2EA; padding:5px 0;","background: #B5D33D; padding:5px 0;","background: #FED23F; padding:5px 0;","color: #FFFFFF; background: #E72264; padding:5px 0;","color: #E72264; background: #FFFFFF; padding:5px 0;"):globalThis.console&&globalThis.console.log(`PixiJS ${j} - ${t} - http://www.pixijs.com/`),Qe=!0)}var t}}function et(e){let t=!1;for(const n in e)if(null==e[n]){t=!0;break}if(!t)return e;const r=Object.create(null);for(const n in e){const t=e[n];t&&(r[n]=t)}return r}function tt(e){let t=0;for(let r=0;r<e.length;r++)null==e[r]?t++:e[r-t]=e[r];return e.length-=t,e}Ze.extension={type:[o.WebGLSystem,o.WebGPUSystem,o.CanvasSystem],name:"hello",priority:-2},Ze.defaultOptions={hello:!1};let rt=0;const nt=class e{constructor(e){this._managedRenderables=[],this._managedHashes=[],this._managedArrays=[],this._renderer=e}init(t){t={...e.defaultOptions,...t},this.maxUnusedTime=t.renderableGCMaxUnusedTime,this._frequency=t.renderableGCFrequency,this.enabled=t.renderableGCActive}get enabled(){return!!this._handler}set enabled(e){this.enabled!==e&&(e?(this._handler=this._renderer.scheduler.repeat(()=>this.run(),this._frequency,!1),this._hashHandler=this._renderer.scheduler.repeat(()=>{for(const e of this._managedHashes)e.context[e.hash]=et(e.context[e.hash])},this._frequency),this._arrayHandler=this._renderer.scheduler.repeat(()=>{for(const e of this._managedArrays)tt(e.context[e.hash])},this._frequency)):(this._renderer.scheduler.cancel(this._handler),this._renderer.scheduler.cancel(this._hashHandler),this._renderer.scheduler.cancel(this._arrayHandler)))}addManagedHash(e,t){this._managedHashes.push({context:e,hash:t})}addManagedArray(e,t){this._managedArrays.push({context:e,hash:t})}prerender({container:e}){this._now=performance.now(),e.renderGroup.gcTick=rt++,this._updateInstructionGCTick(e.renderGroup,e.renderGroup.gcTick)}addRenderable(e){this.enabled&&(-1===e._lastUsed&&(this._managedRenderables.push(e),e.once("destroyed",this._removeRenderable,this)),e._lastUsed=this._now)}run(){var e;const t=this._now,r=this._managedRenderables,n=this._renderer.renderPipes;let s=0;for(let a=0;a<r.length;a++){const i=r[a];if(null===i){s++;continue}const o=i.renderGroup??i.parentRenderGroup,u=(null==(e=null==o?void 0:o.instructionSet)?void 0:e.gcTick)??-1;if(((null==o?void 0:o.gcTick)??0)===u&&(i._lastUsed=t),t-i._lastUsed>this.maxUnusedTime){if(!i.destroyed){const e=n;o&&(o.structureDidChange=!0),e[i.renderPipeId].destroyRenderable(i)}i._lastUsed=-1,s++,i.off("destroyed",this._removeRenderable,this)}else r[a-s]=i}r.length-=s}destroy(){this.enabled=!1,this._renderer=null,this._managedRenderables.length=0,this._managedHashes.length=0,this._managedArrays.length=0}_removeRenderable(e){const t=this._managedRenderables.indexOf(e);t>=0&&(e.off("destroyed",this._removeRenderable,this),this._managedRenderables[t]=null)}_updateInstructionGCTick(e,t){e.instructionSet.gcTick=t;for(const r of e.renderGroupChildren)this._updateInstructionGCTick(r,t)}};nt.extension={type:[o.WebGLSystem,o.WebGPUSystem],name:"renderableGC",priority:0},nt.defaultOptions={renderableGCActive:!0,renderableGCMaxUnusedTime:6e4,renderableGCFrequency:3e4};let st=nt;const at=class e{constructor(e){this._renderer=e,this.count=0,this.checkCount=0}init(t){t={...e.defaultOptions,...t},this.checkCountMax=t.textureGCCheckCountMax,this.maxIdle=t.textureGCAMaxIdle??t.textureGCMaxIdle,this.active=t.textureGCActive}postrender(){this._renderer.renderingToScreen&&(this.count++,this.active&&(this.checkCount++,this.checkCount>this.checkCountMax&&(this.checkCount=0,this.run())))}run(){const e=this._renderer.texture.managedTextures;for(let t=0;t<e.length;t++){const r=e[t];r.autoGarbageCollect&&r.resource&&r._touched>-1&&this.count-r._touched>this.maxIdle&&(r._touched=-1,r.unload())}}destroy(){this._renderer=null}};at.extension={type:[o.WebGLSystem,o.WebGPUSystem],name:"textureGC"},at.defaultOptions={textureGCActive:!0,textureGCAMaxIdle:null,textureGCMaxIdle:3600,textureGCCheckCountMax:600};let it=at;const ot=class e{get autoDensity(){return this.texture.source.autoDensity}set autoDensity(e){this.texture.source.autoDensity=e}get resolution(){return this.texture.source._resolution}set resolution(e){this.texture.source.resize(this.texture.source.width,this.texture.source.height,e)}init(t){(t={...e.defaultOptions,...t}).view&&(N(q,"ViewSystem.view has been renamed to ViewSystem.canvas"),t.canvas=t.view),this.screen=new G(0,0,t.width,t.height),this.canvas=t.canvas||z.get().createCanvas(),this.antialias=!!t.antialias,this.texture=xe(this.canvas,t),this.renderTarget=new Te({colorTextures:[this.texture],depth:!!t.depth,isRoot:!0}),this.texture.source.transparent=t.backgroundAlpha<1,this.resolution=t.resolution}resize(e,t,r){this.texture.source.resize(e,t,r),this.screen.width=this.texture.frame.width,this.screen.height=this.texture.frame.height}destroy(e=!1){("boolean"==typeof e?e:!!(null==e?void 0:e.removeView))&&this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this.texture.destroy()}};ot.extension={type:[o.WebGLSystem,o.WebGPUSystem,o.CanvasSystem],name:"view",priority:0},ot.defaultOptions={width:800,height:600,autoDensity:!1,antialias:!1};const ut=[De,Ye,Ze,ot,Oe,it,Ke,Ve,$,st,Xe],dt=[We,re,Fe,we,oe,de,ue,Ce];export{ke as B,ce as G,ye as R,ut as S,he as U,dt as a,ve as b,fe as c,pe as d,le as e,se as f,ne as t,ge as u};
